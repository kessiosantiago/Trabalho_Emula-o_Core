node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.20/24
	 ipv6 address 2001:0::20/64
	!
    }
    canvas c1
    iconcoords {71.0 24.0}
    labelcoords {71.0 56.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.10 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n1.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.10/../../var/ftp/teste 2> n1.txt
	}
    }
    interface-peer {eth0 n35}
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.2.10/24
	 ipv6 address 2001:2::10/64
	!
    }
    canvas c1
    iconcoords {937.0 24.0}
    labelcoords {937.0 56.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.21/24
	 ipv6 address 2001:0::21/64
	!
    }
    canvas c1
    iconcoords {72.0 71.0}
    labelcoords {72.0 103.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.11 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n3.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.11/../../var/ftp/teste 2> n3.txt
	}
    }
    interface-peer {eth0 n35}
}

node n4 {
    type router
    model host
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.2.11/24
	 ipv6 address 2001:2::11/64
	!
    }
    canvas c1
    iconcoords {937.0 72.0}
    labelcoords {937.0 104.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n5 {
    type router
    model PC
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.22/24
	 ipv6 address 2001:0::22/64
	!
    }
    canvas c1
    iconcoords {72.0 121.0}
    labelcoords {72.0 153.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.12 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n5.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.12/../../var/ftp/teste 2> n5.txt
	}
    }
    interface-peer {eth0 n35}
}

node n6 {
    type router
    model host
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.2.12/24
	 ipv6 address 2001:2::12/64
	!
    }
    canvas c1
    iconcoords {935.0 119.0}
    labelcoords {935.0 151.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.23/24
	 ipv6 address 2001:0::23/64
	!
    }
    canvas c1
    iconcoords {73.0 168.0}
    labelcoords {73.0 200.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.13 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n7.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.13/../../var/ftp/teste 2> n7.txt
	}
    }
    interface-peer {eth0 n35}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.2.13/24
	 ipv6 address 2001:2::13/64
	!
    }
    canvas c1
    iconcoords {936.0 169.0}
    labelcoords {936.0 201.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.0.24/24
	 ipv6 address 2001:0::24/64
	!
    }
    canvas c1
    iconcoords {72.0 216.0}
    labelcoords {72.0 248.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.14 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n9.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.14/../../var/ftp/teste 2> n9.txt
	}
    }
    interface-peer {eth0 n35}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.2.14/24
	 ipv6 address 2001:2::14/64
	!
    }
    canvas c1
    iconcoords {935.0 216.0}
    labelcoords {935.0 248.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.0.25/24
	 ipv6 address 2001:0::25/64
	!
    }
    canvas c1
    iconcoords {71.0 263.0}
    labelcoords {71.0 295.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.15 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n11.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.15/../../var/ftp/teste 2> n11.txt
	}
    }
    interface-peer {eth0 n35}
}

node n12 {
    type router
    model host
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 10.0.2.15/24
	 ipv6 address 2001:2::15/64
	!
    }
    canvas c1
    iconcoords {936.0 264.0}
    labelcoords {936.0 296.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 10.0.0.26/24
	 ipv6 address 2001:0::26/64
	!
    }
    canvas c1
    iconcoords {73.0 313.0}
    labelcoords {73.0 345.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.16 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n13.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.16/../../var/ftp/teste 2> n13.txt
	}
    }
    interface-peer {eth0 n35}
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.2.16/24
	 ipv6 address 2001:2::16/64
	!
    }
    canvas c1
    iconcoords {936.0 312.0}
    labelcoords {936.0 344.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.0.27/24
	 ipv6 address 2001:0::27/64
	!
    }
    canvas c1
    iconcoords {73.0 360.0}
    labelcoords {73.0 392.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.17 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n15.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.17/../../var/ftp/teste 2> n15.txt
	}
    }
    interface-peer {eth0 n35}
}

node n16 {
    type router
    model host
    network-config {
	hostname n16
	!
	interface eth0
	 ip address 10.0.2.17/24
	 ipv6 address 2001:2::17/64
	!
    }
    canvas c1
    iconcoords {934.0 360.0}
    labelcoords {934.0 392.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	 ip address 10.0.0.28/24
	 ipv6 address 2001:0::28/64
	!
    }
    canvas c1
    iconcoords {73.0 408.0}
    labelcoords {73.0 440.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.18 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n17.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.18/../../var/ftp/teste 2> n17.txt
	}
    }
    interface-peer {eth0 n35}
}

node n18 {
    type router
    model host
    network-config {
	hostname n18
	!
	interface eth0
	 ip address 10.0.2.18/24
	 ipv6 address 2001:2::18/64
	!
    }
    canvas c1
    iconcoords {936.0 407.0}
    labelcoords {936.0 439.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n19 {
    type router
    model PC
    network-config {
	hostname n19
	!
	interface eth0
	 ip address 10.0.0.29/24
	 ipv6 address 2001:0::29/64
	!
    }
    canvas c1
    iconcoords {73.0 456.0}
    labelcoords {73.0 488.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.19 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n19.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.19/../../var/ftp/teste 2> n19.txt
	}
    }
    interface-peer {eth0 n35}
}

node n20 {
    type router
    model host
    network-config {
	hostname n20
	!
	interface eth0
	 ip address 10.0.2.19/24
	 ipv6 address 2001:2::19/64
	!
    }
    canvas c1
    iconcoords {937.0 456.0}
    labelcoords {937.0 488.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	 ip address 10.0.0.30/24
	 ipv6 address 2001:0::30/64
	!
    }
    canvas c1
    iconcoords {71.0 504.0}
    labelcoords {71.0 536.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.20 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n21.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.20/../../var/ftp/teste 2> n21.txt
	}
    }
    interface-peer {eth0 n35}
}

node n22 {
    type router
    model host
    network-config {
	hostname n22
	!
	interface eth0
	 ip address 10.0.2.20/24
	 ipv6 address 2001:2::20/64
	!
    }
    canvas c1
    iconcoords {936.0 504.0}
    labelcoords {936.0 536.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n23 {
    type router
    model PC
    network-config {
	hostname n23
	!
	interface eth0
	 ip address 10.0.0.31/24
	 ipv6 address 2001:0::31/64
	!
    }
    canvas c1
    iconcoords {72.0 552.0}
    labelcoords {72.0 584.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.21 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n23.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.21/../../var/ftp/teste 2> n23.txt
	}
    }
    interface-peer {eth0 n35}
}

node n24 {
    type router
    model host
    network-config {
	hostname n24
	!
	interface eth0
	 ip address 10.0.2.21/24
	 ipv6 address 2001:2::21/64
	!
    }
    canvas c1
    iconcoords {937.0 552.0}
    labelcoords {937.0 584.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n25 {
    type router
    model PC
    network-config {
	hostname n25
	!
	interface eth0
	 ip address 10.0.0.32/24
	 ipv6 address 2001:0::32/64
	!
    }
    canvas c1
    iconcoords {73.0 599.0}
    labelcoords {73.0 631.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.22 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n25.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.22/../../var/ftp/teste 2> n25.txt
	}
    }
    interface-peer {eth0 n35}
}

node n26 {
    type router
    model host
    network-config {
	hostname n26
	!
	interface eth0
	 ip address 10.0.2.22/24
	 ipv6 address 2001:2::22/64
	!
    }
    canvas c1
    iconcoords {936.0 599.0}
    labelcoords {936.0 631.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n27 {
    type router
    model PC
    network-config {
	hostname n27
	!
	interface eth0
	 ip address 10.0.0.33/24
	 ipv6 address 2001:0::33/64
	!
    }
    canvas c1
    iconcoords {71.0 647.0}
    labelcoords {71.0 679.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.23 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n27.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.23/../../var/ftp/teste 2> n27.txt
	}
    }
    interface-peer {eth0 n35}
}

node n28 {
    type router
    model host
    network-config {
	hostname n28
	!
	interface eth0
	 ip address 10.0.2.23/24
	 ipv6 address 2001:2::23/64
	!
    }
    canvas c1
    iconcoords {936.0 648.0}
    labelcoords {936.0 680.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n29 {
    type router
    model PC
    network-config {
	hostname n29
	!
	interface eth0
	 ip address 10.0.0.34/24
	 ipv6 address 2001:0::34/64
	!
    }
    canvas c1
    iconcoords {73.0 695.0}
    labelcoords {73.0 727.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.24 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n29.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.24/../../var/ftp/teste 2> n29.txt
	}
    }
    interface-peer {eth0 n35}
}

node n30 {
    type router
    model host
    network-config {
	hostname n30
	!
	interface eth0
	 ip address 10.0.2.24/24
	 ipv6 address 2001:2::24/64
	!
    }
    canvas c1
    iconcoords {936.0 695.0}
    labelcoords {936.0 727.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n31 {
    type router
    model PC
    network-config {
	hostname n31
	!
	interface eth0
	 ip address 10.0.0.35/24
	 ipv6 address 2001:0::35/64
	!
    }
    canvas c1
    iconcoords {169.0 697.0}
    labelcoords {169.0 729.0}
    services {DefaultRoute SSH}
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	files=('startsshd.sh', '/etc/ssh/sshd_config', )
	startidx=1
	cmddown=
	}
    }
    custom-config {
	custom-config-id service:SSH:startsshd.sh
	custom-command startsshd.sh
	config {
	#!/bin/sh
	# auto-generated by SSH service (utility.py)
	#ssh-keygen -q -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
	#chmod 655 /var/run/sshd
	# wait until RSA host key has been generated to launch sshd
	#/usr/sbin/sshd -f /etc/ssh/sshd_config
	
	
	ping 10.0.2.25 -c 30 #> novodnovod3
	sleep 20
	#tcpdump -w n31.pcap &
	wget --user=alunoadmlin --password='admlin2019' ftp://10.0.2.25/../../var/ftp/teste 2> n31.txt
	}
    }
    interface-peer {eth0 n35}
}

node n32 {
    type router
    model host
    network-config {
	hostname n32
	!
	interface eth0
	 ip address 10.0.2.25/24
	 ipv6 address 2001:2::25/64
	!
    }
    canvas c1
    iconcoords {840.0 695.0}
    labelcoords {840.0 727.0}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	dirs=('/var/run/vsftpd/empty', '/var/ftp', )
	files=('vsftpd.conf', )
	startidx=0
	cmdup=('vsftpd ./vsftpd.conf', 'chmod 0644 /var/run/vsftpd/empty', 'dd if=/dev/urandom of=/var/ftp/teste bs=1M count=1000', )
	cmddown=('killall vsftpd', )
	cmdval=('pidof vsftpd', )
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	allow_writeable_chroot=YES
	}
    }
    services {DefaultRoute FTP SSH}
    interface-peer {eth0 n36}
}

node n33 {
    type router
    model router
    network-config {
	hostname n33
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
    }
    canvas c1
    iconcoords {360.0 359.0}
    labelcoords {360.0 391.0}
    interface-peer {eth0 n35}
    interface-peer {eth1 n34}
}

node n34 {
    type router
    model router
    network-config {
	hostname n34
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
    }
    canvas c1
    iconcoords {602.0 362.0}
    labelcoords {602.0 394.0}
    interface-peer {eth0 n33}
    interface-peer {eth1 n36}
}

node n35 {
    type lanswitch
    network-config {
	hostname n35
	!
    }
    canvas c1
    iconcoords {218.0 359.0}
    labelcoords {218.0 383.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
    interface-peer {e2 n5}
    interface-peer {e3 n7}
    interface-peer {e4 n9}
    interface-peer {e5 n11}
    interface-peer {e6 n13}
    interface-peer {e7 n15}
    interface-peer {e8 n17}
    interface-peer {e9 n19}
    interface-peer {e10 n21}
    interface-peer {e11 n23}
    interface-peer {e12 n25}
    interface-peer {e13 n27}
    interface-peer {e14 n29}
    interface-peer {e15 n31}
    interface-peer {e16 n33}
}

node n36 {
    type lanswitch
    network-config {
	hostname n36
	!
    }
    canvas c1
    iconcoords {743.0 359.0}
    labelcoords {743.0 383.0}
    interface-peer {e0 n34}
    interface-peer {e1 n2}
    interface-peer {e2 n4}
    interface-peer {e3 n6}
    interface-peer {e4 n8}
    interface-peer {e5 n10}
    interface-peer {e6 n12}
    interface-peer {e7 n14}
    interface-peer {e8 n16}
    interface-peer {e9 n18}
    interface-peer {e10 n20}
    interface-peer {e11 n22}
    interface-peer {e12 n24}
    interface-peer {e13 n26}
    interface-peer {e14 n28}
    interface-peer {e15 n30}
    interface-peer {e16 n32}
}

link l1 {
    nodes {n1 n35}
    bandwidth 50000000
}

link l2 {
    nodes {n3 n35}
    bandwidth 50000000
}

link l3 {
    nodes {n5 n35}
    bandwidth 50000000
}

link l4 {
    nodes {n7 n35}
    bandwidth 50000000
}

link l5 {
    nodes {n9 n35}
    bandwidth 50000000
}

link l6 {
    nodes {n11 n35}
    bandwidth 50000000
}

link l7 {
    nodes {n13 n35}
    bandwidth 50000000
}

link l8 {
    nodes {n15 n35}
    bandwidth 50000000
}

link l9 {
    nodes {n17 n35}
    bandwidth 50000000
}

link l10 {
    nodes {n19 n35}
    bandwidth 50000000
}

link l11 {
    nodes {n21 n35}
    bandwidth 50000000
}

link l12 {
    nodes {n23 n35}
    bandwidth 50000000
}

link l13 {
    nodes {n25 n35}
    bandwidth 50000000
}

link l14 {
    nodes {n27 n35}
    bandwidth 50000000
}

link l15 {
    nodes {n29 n35}
    bandwidth 50000000
}

link l16 {
    nodes {n31 n35}
    bandwidth 50000000
}

link l17 {
    nodes {n35 n33}
    bandwidth 50000000
}

link l18 {
    nodes {n33 n34}
    bandwidth 50000000
}

link l19 {
    nodes {n34 n36}
    bandwidth 50000000
}

link l20 {
    nodes {n2 n36}
    bandwidth 50000000
}

link l21 {
    nodes {n4 n36}
    bandwidth 50000000
}

link l22 {
    nodes {n6 n36}
    bandwidth 50000000
}

link l23 {
    nodes {n8 n36}
    bandwidth 50000000
}

link l24 {
    nodes {n10 n36}
    bandwidth 50000000
}

link l25 {
    nodes {n12 n36}
    bandwidth 50000000
}

link l26 {
    nodes {n14 n36}
    bandwidth 50000000
}

link l27 {
    nodes {n16 n36}
    bandwidth 50000000
}

link l28 {
    nodes {n18 n36}
    bandwidth 50000000
}

link l29 {
    nodes {n20 n36}
    bandwidth 50000000
}

link l30 {
    nodes {n22 n36}
    bandwidth 50000000
}

link l31 {
    nodes {n24 n36}
    bandwidth 50000000
}

link l32 {
    nodes {n26 n36}
    bandwidth 50000000
}

link l33 {
    nodes {n28 n36}
    bandwidth 50000000
}

link l34 {
    nodes {n30 n36}
    bandwidth 50000000
}

link l35 {
    nodes {n32 n36}
    bandwidth 50000000
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1000 750}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

